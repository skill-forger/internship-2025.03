basePath: /
definitions:
   contract.BloggerFollowStatusResponse:
      properties:
         is_following:
            type: boolean
         user_id:
            type: integer
      type: object
   contract.BloggerListResponse:
      properties:
         bloggers:
            items:
               $ref: "#/definitions/contract.ProfileResponse"
            type: array
      type: object
   contract.HealthCheckResponse:
      properties:
         resource:
            type: string
         status:
            type: string
      type: object
   contract.PostDetailResponse:
      properties:
         body:
            type: string
         created_at:
            type: string
         id:
            type: integer
         tags:
            items:
               type: integer
            type: array
         title:
            type: string
         updated_at:
            type: string
         user_id:
            type: integer
      type: object
   contract.PostFavouriteStatusResponse:
      properties:
         is_favourite:
            type: boolean
         post_id:
            type: integer
      type: object
   contract.PostListResponse:
      properties:
         posts:
            items:
               $ref: "#/definitions/contract.PostDetailResponse"
            type: array
      type: object
   contract.ProfileResponse:
      properties:
         biography:
            type: string
         created_at:
            type: string
         display_name:
            type: string
         email:
            type: string
         first_name:
            type: string
         id:
            type: integer
         last_name:
            type: string
         profile_image:
            type: string
         updated_at:
            type: string
      type: object
   contract.SignInRequest:
      properties:
         email:
            type: string
         password:
            type: string
      required:
         - email
         - password
      type: object
   contract.SignInResponse:
      properties:
         expired_at:
            type: integer
         token:
            type: string
         type:
            type: string
         user_id:
            type: integer
      type: object
host: localhost:3000
info:
   contact:
      email: support@swagger.io
      name: API Support
      url: http://www.swagger.io/support
   description: This is the swagger API for golang project layout.
   license:
      name: Apache 2.0
      url: http://www.apache.org/licenses/LICENSE-2.0.html
   termsOfService: http://swagger.io/terms/
   title: golang project layout server swagger API
   version: "1.0"
paths:
   /auth/sign-in:
      post:
         consumes:
            - application/json
         description: Authenticates user via predefined credentials and return JWT Token
         parameters:
            - description: Sign In Request Payload
              in: body
              name: SignInRequest
              required: true
              schema:
                 $ref: "#/definitions/contract.SignInRequest"
         produces:
            - application/json
         responses:
            "200":
               description: OK
               schema:
                  items:
                     $ref: "#/definitions/contract.SignInResponse"
                  type: array
            "400":
               description: Bad Request
               schema: {}
         summary: Signs In user into the system
         tags:
            - authentication
   /favorites/bloggers:
      get:
         consumes:
            - application/json
         description: Blogger can view all the bloggers from their following list
         produces:
            - application/json
         responses:
            "200":
               description: OK
               schema:
                  $ref: "#/definitions/contract.BloggerListResponse"
            "400":
               description: Bad Request
               schema: {}
         security:
            - BearerToken: []
         summary: View all followed bloggers
         tags:
            - favourite
   /favorites/bloggers/{userId}:
      put:
         consumes:
            - application/json
         description: Blogger can add/remove blogger from their following list
         parameters:
            - description: User ID to follow/unfollow
              in: path
              name: userId
              required: true
              type: integer
         produces:
            - application/json
         responses:
            "200":
               description: OK
               schema:
                  $ref: "#/definitions/contract.BloggerFollowStatusResponse"
            "400":
               description: Bad Request
               schema: {}
         security:
            - BearerToken: []
         summary: Add/remove blogger from following list
         tags:
            - favourite
   /favorites/bloggers/posts:
      get:
         consumes:
            - application/json
         description: Blogger can view all the posts of the following bloggers
         produces:
            - application/json
         responses:
            "200":
               description: OK
               schema:
                  $ref: "#/definitions/contract.PostListResponse"
            "400":
               description: Bad Request
               schema: {}
         security:
            - BearerToken: []
         summary: View posts from followed bloggers
         tags:
            - favourite
   /favorites/posts:
      get:
         consumes:
            - application/json
         description: Blogger can view all posts from their favourite list
         produces:
            - application/json
         responses:
            "200":
               description: OK
               schema:
                  $ref: "#/definitions/contract.PostListResponse"
            "400":
               description: Bad Request
               schema: {}
         security:
            - BearerToken: []
         summary: View favourite posts
         tags:
            - favourite
   /favorites/posts/{postId}:
      put:
         consumes:
            - application/json
         description: Blogger can add/remove a post from their favourite list
         parameters:
            - description: Post ID to add/remove from favourites
              in: path
              name: postId
              required: true
              type: integer
         produces:
            - application/json
         responses:
            "200":
               description: OK
               schema:
                  $ref: "#/definitions/contract.PostFavouriteStatusResponse"
            "400":
               description: Bad Request
               schema: {}
         security:
            - BearerToken: []
         summary: Add/remove post from favourite list
         tags:
            - favourite
   /health:
      get:
         consumes:
            - application/json
         description: Perform server and dependent resource liveness check
         produces:
            - application/json
         responses:
            "200":
               description: OK
               schema:
                  $ref: "#/definitions/contract.HealthCheckResponse"
            "400":
               description: Bad Request
               schema: {}
         summary: Show server liveness
         tags:
            - health
   /profile:
      get:
         consumes:
            - application/json
         description: Respond profile detail information
         produces:
            - application/json
         responses:
            "200":
               description: OK
               schema:
                  $ref: "#/definitions/contract.ProfileResponse"
            "400":
               description: Bad Request
               schema: {}
         security:
            - BearerToken: []
         summary: Respond profile detail information
         tags:
            - profile
securityDefinitions:
   BearerToken:
      in: header
      name: Authorization
      type: apiKey
swagger: "2.0"
